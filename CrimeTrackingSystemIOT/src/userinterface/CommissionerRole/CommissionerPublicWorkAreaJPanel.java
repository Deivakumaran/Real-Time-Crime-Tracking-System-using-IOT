/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CommissionerRole;

import Business.Chart.Pie_Chart;
import userinterface.InvestigatorRole.*;
import Business.Enterprise.Enterprise;
import Business.Organization.CommissionerOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AlarmWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deivakumaran
 */
public class CommissionerPublicWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private CommissionerOrganization commissionerOrganization;

    public CommissionerPublicWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, CommissionerOrganization organization, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.commissionerOrganization = organization;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : commissionerOrganization.getWorkQueue().getWorkRequestList()) {
            if (WorkRequest.Type.Alarm.getValue().equalsIgnoreCase(request.getName())) {
                Object[] row = new Object[7];
                row[0] = request;
                row[1] = request.getSender().getEmployee().getName();
                row[2] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                row[3] = ((AlarmWorkRequest) request).getStreetline1();
                row[4] = ((AlarmWorkRequest) request).getCity();
                row[5] = ((AlarmWorkRequest) request).getZipCode();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        processJButton = new javax.swing.JButton();
        refreshJButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        recordButton = new javax.swing.JButton();
        streetRecordButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(196, 232, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setBackground(new java.awt.Color(225, 244, 255));
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Location Street", "Location City", "Zip Code"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        workRequestJTable.setGridColor(new java.awt.Color(225, 244, 255));
        workRequestJTable.setSelectionForeground(new java.awt.Color(224, 244, 255));
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 560, 270));

        processJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        processJButton.setText("View Details");
        processJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(processJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 460, -1, -1));

        refreshJButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 140, -1, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        jLabel1.setText("Public Emergengy Request ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 60, 300, 20));

        backButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/CommissionerRole/Back3Blue.png"))); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 550, 120, 30));

        recordButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        recordButton.setText("View Report City wise");
        recordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordButtonActionPerformed(evt);
            }
        });
        add(recordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 550, 230, 30));

        streetRecordButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        streetRecordButton.setText("View Report Street Wise");
        streetRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streetRecordButtonActionPerformed(evt);
            }
        });
        add(streetRecordButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 230, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed

        int selectedRow = workRequestJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select Atleast one Row to View Details", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        AlarmWorkRequest alarmWorkRequest = (AlarmWorkRequest) workRequestJTable.getValueAt(selectedRow, 0);
        alarmWorkRequest.setStatus("Processing");
        ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, alarmWorkRequest);
        userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void recordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordButtonActionPerformed

        // TODO add your handling code here:
        Pie_Chart demo = new Pie_Chart("Mobile Sales", enterprise, commissionerOrganization, "City");
        demo.main("City");


    }//GEN-LAST:event_recordButtonActionPerformed

    private void streetRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streetRecordButtonActionPerformed
        // TODO add your handling code here:
        Pie_Chart demo = new Pie_Chart("Mobile Sales", enterprise, commissionerOrganization, "Street");
        demo.main("Street");

    }//GEN-LAST:event_streetRecordButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton processJButton;
    private javax.swing.JButton recordButton;
    private javax.swing.JButton refreshJButton;
    private javax.swing.JButton streetRecordButton;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
