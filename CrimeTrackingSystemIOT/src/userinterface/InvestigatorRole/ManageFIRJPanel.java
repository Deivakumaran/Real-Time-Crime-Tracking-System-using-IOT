/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.InvestigatorRole;

import Business.Enterprise.Enterprise;
import Business.Organization.CommissionerOrganization;
import Business.Organization.InvestigatorOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EnquiryReportRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deivakumaran
 */
public class ManageFIRJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFIRJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    public InvestigatorOrganization investigatorOrganization;
    private UserAccount userAccount;
    private Enterprise enterprise;

    public ManageFIRJPanel(JPanel userProcessContainer, Enterprise enterprise, InvestigatorOrganization investigatorOrganization, UserAccount account) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = userAccount;
        this.investigatorOrganization = investigatorOrganization;
        this.enterprise = enterprise;
        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) firTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : investigatorOrganization.getWorkQueue().getWorkRequestList()) {
            if (request.getName().equalsIgnoreCase(WorkRequest.Type.Enquiry.getValue())) {
                Object[] row = new Object[5];
                row[0] = request;
                int id = ((EnquiryReportRequest) request).getEnquiryID();
                row[1] = id;
                String victim = ((EnquiryReportRequest) request).getVictimName();
                row[2] = victim;
                row[3] = request.getSender();
                String result = ((EnquiryReportRequest) request).getResult();
                row[4] = result == null ? "New" : result;
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        firTable = new javax.swing.JTable();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        requestButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(196, 232, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        jLabel1.setText("Manage FIR");

        firTable.setBackground(new java.awt.Color(225, 244, 255));
        firTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Crime Type", "EnquiryID", "Victim Name", "Sender", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        firTable.setGridColor(new java.awt.Color(225, 244, 255));
        firTable.setSelectionForeground(new java.awt.Color(224, 244, 255));
        firTable.setShowVerticalLines(false);
        jScrollPane1.setViewportView(firTable);

        deleteButton.setBackground(new java.awt.Color(225, 244, 255));
        deleteButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        updateButton.setBackground(new java.awt.Color(225, 244, 255));
        updateButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        requestButton.setBackground(new java.awt.Color(225, 244, 255));
        requestButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        requestButton.setText("Send Request to Commisioner");
        requestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestButtonActionPerformed(evt);
            }
        });

        backButton.setBackground(new java.awt.Color(225, 244, 255));
        backButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/InvestigatorRole/Back3Blue.png"))); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(325, 325, 325)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(requestButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(updateButton))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(640, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(requestButton)
                    .addComponent(updateButton))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(deleteButton))
                .addContainerGap(591, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int row = firTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }

        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(row, 0);
        investigatorOrganization.getWorkQueue().getWorkRequestList().remove(enquiryReportRequest);

        populateTable();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void requestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestButtonActionPerformed
        // TODO add your handling code here:
        int row = firTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(row, 0);
        Organization org = null;
        if (enquiryReportRequest.getResult().equalsIgnoreCase("New")) {

            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (organization instanceof CommissionerOrganization) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                enquiryReportRequest.setResult("Sent");
                org.getWorkQueue().getWorkRequestList().add(enquiryReportRequest);
                JOptionPane.showMessageDialog(null, "Request sent");
                populateTable();
            }
        } else if (enquiryReportRequest.getResult().equalsIgnoreCase("Sent")) {
            JOptionPane.showMessageDialog(null, "Request has been Sent Already", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (enquiryReportRequest.getResult().equalsIgnoreCase("Approved")) {
            JOptionPane.showMessageDialog(null, "Request has been Processed", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_requestButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_backButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        int row = firTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(row, 0);
        if (enquiryReportRequest.getResult().equalsIgnoreCase("New")) {

            UpdateEnquiryReportJPanel updateEnquiryReportJPanel = new UpdateEnquiryReportJPanel(userProcessContainer, enquiryReportRequest);
            userProcessContainer.add("updateEnquiryReportJPanel", updateEnquiryReportJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else if (enquiryReportRequest.getResult().equalsIgnoreCase("Sent")) {
            JOptionPane.showMessageDialog(null, "Cannot be altered since request has been Sent Already", "Warning", JOptionPane.WARNING_MESSAGE);

        } else if (enquiryReportRequest.getResult().equalsIgnoreCase("Approved")) {
            JOptionPane.showMessageDialog(null, "Cannot be altered since request has been Processed", "Warning", JOptionPane.WARNING_MESSAGE);

        }
    }//GEN-LAST:event_updateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable firTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
