/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AnalystRole;

import Business.Enterprise.Enterprise;
import Business.Organization.AnalystOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DNARequest;
import Business.WorkQueue.EnquiryReportRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deivakumaran
 */
public class ManageDNACaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCaseJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private AnalystOrganization analystOrganization;
    private Enterprise enterprise;

    ManageDNACaseJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, AnalystOrganization analystOrganization) {
        initComponents();
        this.enterprise = enterprise;
        this.account = account;
        this.analystOrganization = analystOrganization;
        this.userProcessContainer = userProcessContainer;
        populateInvestigationTable();
        populateTable();
    }

    public void populateInvestigationTable() {
        DefaultTableModel model = (DefaultTableModel) firTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : analystOrganization.getWorkQueue().getWorkRequestList()) {
            if ((request.getName()).equals(WorkRequest.Type.Enquiry.getValue())) {

                Object[] row = new Object[4];
                row[0] = request;
                int id = ((EnquiryReportRequest) request).getEnquiryID();
                row[1] = id;
                String victim = ((EnquiryReportRequest) request).getVictimName();
                row[2] = victim;
                row[3] = request.getSender();
                String result = ((EnquiryReportRequest) request).getResult();
                model.addRow(row);
            }
        }
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) DNATable.getModel();
        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equalsIgnoreCase(Organization.Type.Analyst.getValue())) {
                for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                    if ((request.getName()).equals(WorkRequest.Type.DNA.getValue())) {
                        Object[] row = new Object[5];
                        row[0] = request;
                        int caseID = ((DNARequest) request).getCaseID();
                        row[1] = caseID;
                        String sample = ((DNARequest) request).getSample();
                        row[2] = sample;
                        row[3] = request.getStatus();
                        model.addRow(row);

                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        firTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        enquiryIDTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enquiryDescriptionTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        helicalRotationTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        diameterTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        rotationPerBaseTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        meanProperTwistTextField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        distancePhospatesTextField = new javax.swing.JTextField();
        helicalTurnTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        viewButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        DNATable = new javax.swing.JTable();
        populateButton = new javax.swing.JButton();
        addToCaseButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(196, 232, 255));

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        jLabel1.setText("Manage Case");

        firTable.setBackground(new java.awt.Color(225, 244, 255));
        firTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Crime Type", "EnquiryID", "Victim Name", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        firTable.setSelectionForeground(new java.awt.Color(224, 244, 255));
        jScrollPane1.setViewportView(firTable);
        if (firTable.getColumnModel().getColumnCount() > 0) {
            firTable.getColumnModel().getColumn(0).setResizable(false);
            firTable.getColumnModel().getColumn(1).setResizable(false);
            firTable.getColumnModel().getColumn(2).setResizable(false);
            firTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel2.setText("Enquiry ID");

        enquiryIDTextField.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel3.setText("Enquiry Description");

        enquiryDescriptionTextField.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel4.setText("Helical Rotation");

        helicalRotationTextField.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel7.setText("Diameter");

        diameterTextField.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel8.setText("Rotation Per Base");

        rotationPerBaseTextField.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel9.setText("Mean Proper Twist");

        meanProperTwistTextField.setEnabled(false);

        jLabel10.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel10.setText("Distance Between Adjacent Phospates");

        distancePhospatesTextField.setEnabled(false);

        helicalTurnTextField.setEnabled(false);

        jLabel11.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel11.setText("Helical Turn");

        viewButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        DNATable.setBackground(new java.awt.Color(225, 244, 255));
        DNATable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Request Number", "Sample", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DNATable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(DNATable);
        if (DNATable.getColumnModel().getColumnCount() > 0) {
            DNATable.getColumnModel().getColumn(0).setResizable(false);
            DNATable.getColumnModel().getColumn(1).setResizable(false);
            DNATable.getColumnModel().getColumn(2).setResizable(false);
            DNATable.getColumnModel().getColumn(3).setResizable(false);
        }

        populateButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        populateButton.setText("Populate");
        populateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateButtonActionPerformed(evt);
            }
        });

        addToCaseButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        addToCaseButton.setText("Add to Case");
        addToCaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCaseButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        backButton.setText("<<BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(534, 534, 534)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel11)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)
                                        .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(backButton)
                                        .addGap(201, 201, 201)))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(enquiryIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(enquiryDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(distancePhospatesTextField)
                                                .addComponent(meanProperTwistTextField)
                                                .addComponent(rotationPerBaseTextField)
                                                .addComponent(diameterTextField)
                                                .addComponent(helicalRotationTextField)
                                                .addComponent(helicalTurnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(162, 162, 162)
                                                .addComponent(populateButton))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(43, 43, 43)
                                        .addComponent(addToCaseButton))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1077, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(505, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(viewButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(24, 24, 24)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel7)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel8)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel9)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel10)
                        .addGap(37, 37, 37)
                        .addComponent(jLabel11))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(enquiryIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(enquiryDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(helicalRotationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(populateButton)))
                        .addGap(10, 10, 10)
                        .addComponent(diameterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(rotationPerBaseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(meanProperTwistTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(distancePhospatesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(helicalTurnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addToCaseButton))
                .addContainerGap(314, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void populateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = DNATable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "No row was selected");
            return;
        }

        DNARequest dnaRequest = (DNARequest) DNATable.getValueAt(selectedRow, 0);
        helicalRotationTextField.setText(dnaRequest.getHelicalRotation());
        helicalTurnTextField.setText(dnaRequest.getHelicalTurn());
        diameterTextField.setText(dnaRequest.getDiameter());
        rotationPerBaseTextField.setText(dnaRequest.getRotationPerBase());
        meanProperTwistTextField.setText(dnaRequest.getMeanProperTwist());
        distancePhospatesTextField.setText(dnaRequest.getDistanceBetweenAdjacentPhospates());


    }//GEN-LAST:event_populateButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = firTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "No row was selected");
            return;
        }

        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(selectedRow, 0);
        enquiryIDTextField.setText(String.valueOf(enquiryReportRequest.getEnquiryID()));
        enquiryDescriptionTextField.setText(enquiryReportRequest.getEnquiryDescription());


    }//GEN-LAST:event_viewButtonActionPerformed

    private void addToCaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCaseButtonActionPerformed
        // TODO add your handling code here:
        if (enquiryIDTextField.getText().equals("") && diameterTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Appropriate Values must be populated before adding to case");
            return;

        }

        int selectedRow = firTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row to add to case");
            return;
        }

        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(selectedRow, 0);

        int diameter;
        int helicalTurn;
        int rotationPerBase;
        int meanProperTwist;
        double distanceBetweenAdjacentPhospates;
        try {
            diameter = Integer.valueOf(diameterTextField.getText());
            helicalTurn = Integer.valueOf(helicalTurnTextField.getText());
            rotationPerBase = Integer.valueOf(rotationPerBaseTextField.getText());
            meanProperTwist = Integer.valueOf(meanProperTwistTextField.getText());
            distanceBetweenAdjacentPhospates = Double.valueOf(distancePhospatesTextField.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "DNA values should be in numbers", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        enquiryReportRequest.setHelicalRotation(helicalRotationTextField.getText());
        enquiryReportRequest.setHelicalTurn(Integer.valueOf(helicalTurnTextField.getText()));
        enquiryReportRequest.setDiameter(Integer.valueOf(diameterTextField.getText()));
        enquiryReportRequest.setRotationPerBase(Integer.valueOf(rotationPerBaseTextField.getText()));
        enquiryReportRequest.setMeanProperTwist(Integer.valueOf(meanProperTwistTextField.getText()));
        enquiryReportRequest.setDistanceBetweenAdjacentPhospates(Double.valueOf(distancePhospatesTextField.getText()));
        JOptionPane.showMessageDialog(this, "Added to case");

        helicalRotationTextField.setText("");
        helicalTurnTextField.setText("");
        diameterTextField.setText("");
        rotationPerBaseTextField.setText("");
        meanProperTwistTextField.setText("");
        distancePhospatesTextField.setText("");
        enquiryIDTextField.setText("");
        enquiryDescriptionTextField.setText("");
    }//GEN-LAST:event_addToCaseButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DNATable;
    private javax.swing.JButton addToCaseButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField diameterTextField;
    private javax.swing.JTextField distancePhospatesTextField;
    private javax.swing.JTextField enquiryDescriptionTextField;
    private javax.swing.JTextField enquiryIDTextField;
    private javax.swing.JTable firTable;
    private javax.swing.JTextField helicalRotationTextField;
    private javax.swing.JTextField helicalTurnTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField meanProperTwistTextField;
    private javax.swing.JButton populateButton;
    private javax.swing.JTextField rotationPerBaseTextField;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
