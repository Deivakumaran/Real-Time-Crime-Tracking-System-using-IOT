/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AnalystRole;

import Business.Enterprise.Enterprise;
import Business.Organization.AnalystOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.EnquiryReportRequest;
import Business.WorkQueue.LabFingerPrintRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author deivakumaran
 */
public class ManageFingerPrintCaseJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFingerPrintCaseJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private AnalystOrganization analystOrganization;
    private Enterprise enterprise;

    ManageFingerPrintCaseJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount account, AnalystOrganization analystOrganization) {
        initComponents();
        this.enterprise = enterprise;
        this.account = account;
        this.analystOrganization = analystOrganization;
        this.userProcessContainer = userProcessContainer;
        populateFingerPrintTable();
        populateInvestigationTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addToCaseButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        enquiryIDTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        enquiryDescriptionTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        firTable = new javax.swing.JTable();
        viewButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        fingerTable = new javax.swing.JTable();
        populateButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        fingerPrintSpacingTextField = new javax.swing.JTextField();
        fingerPrintTypeTextField = new javax.swing.JTextField();
        backButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(196, 232, 255));

        addToCaseButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        addToCaseButton.setText("Add to Case");
        addToCaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addToCaseButtonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel2.setText("Enquiry ID");

        enquiryIDTextField.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel3.setText("Enquiry Description");

        enquiryDescriptionTextField.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Calibri", 3, 24)); // NOI18N
        jLabel1.setText("Manage Case");

        firTable.setBackground(new java.awt.Color(225, 244, 255));
        firTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Enquiry Description", "EnquiryID", "Victim Name", "Sender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(firTable);
        if (firTable.getColumnModel().getColumnCount() > 0) {
            firTable.getColumnModel().getColumn(0).setResizable(false);
            firTable.getColumnModel().getColumn(1).setResizable(false);
            firTable.getColumnModel().getColumn(2).setResizable(false);
            firTable.getColumnModel().getColumn(3).setResizable(false);
        }

        viewButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        viewButton.setText("View");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        fingerTable.setBackground(new java.awt.Color(225, 244, 255));
        fingerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Message", "Request Number", "Finger Print Type", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fingerTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(fingerTable);
        if (fingerTable.getColumnModel().getColumnCount() > 0) {
            fingerTable.getColumnModel().getColumn(0).setResizable(false);
            fingerTable.getColumnModel().getColumn(1).setResizable(false);
            fingerTable.getColumnModel().getColumn(2).setResizable(false);
            fingerTable.getColumnModel().getColumn(3).setResizable(false);
        }

        populateButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        populateButton.setText("Populate");
        populateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                populateButtonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel5.setText("Finger Print Type");

        jLabel6.setFont(new java.awt.Font("Calibri", 3, 18)); // NOI18N
        jLabel6.setText("Finger Print Spacing");

        fingerPrintSpacingTextField.setEnabled(false);

        fingerPrintTypeTextField.setEnabled(false);

        backButton.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/AnalystRole/Back3Blue.png"))); // NOI18N
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1084, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(viewButton)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(addToCaseButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(backButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGap(91, 91, 91)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(enquiryDescriptionTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(enquiryIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(1, 1, 1)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(fingerPrintSpacingTextField)
                                                .addComponent(fingerPrintTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(341, 341, 341)
                                            .addComponent(populateButton))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(86, 86, 86)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(502, 502, 502)
                            .addComponent(jLabel1))))
                .addContainerGap(492, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(viewButton)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(enquiryIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(enquiryDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(fingerPrintTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(fingerPrintSpacingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addComponent(addToCaseButton)
                        .addGap(34, 34, 34)
                        .addComponent(backButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(populateButton)))
                .addContainerGap(337, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateFingerPrintTable() {
        DefaultTableModel model = (DefaultTableModel) fingerTable.getModel();
        model.setRowCount(0);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equalsIgnoreCase(Organization.Type.Analyst.getValue())) {
                for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                    if ((request.getName()).equals(WorkRequest.Type.FingerPrint.getValue())) {

                        Object[] row = new Object[4];
                        row[0] = request;
                        int caseID = ((LabFingerPrintRequest) request).getCaseID();
                        row[1] = caseID;
                        String fingerType = ((LabFingerPrintRequest) request).getResult();
                        row[2] = fingerType;
                        row[3] = request.getStatus();
                        model.addRow(row);
                    }
                }

            }
        }
    }

    public void populateInvestigationTable() {
        DefaultTableModel model = (DefaultTableModel) firTable.getModel();
        model.setRowCount(0);

        for (WorkRequest request : analystOrganization.getWorkQueue().getWorkRequestList()) {
            if ((request.getName()).equals(WorkRequest.Type.Enquiry.getValue())) {
                Object[] row = new Object[4];
                row[0] = request;
                int id = ((EnquiryReportRequest) request).getEnquiryID();
                row[1] = id;
                String victim = ((EnquiryReportRequest) request).getVictimName();
                row[2] = victim;
                row[3] = request.getSender();
                String result = ((EnquiryReportRequest) request).getResult();
                model.addRow(row);
            }
        }
    }
    private void addToCaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addToCaseButtonActionPerformed
        // TODO add your handling code here:
        if (enquiryIDTextField.getText().equals("") && fingerPrintTypeTextField.getText().equals("")
                && enquiryDescriptionTextField.getText().equals("") && fingerPrintSpacingTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Appropriate Values must be populated before adding to case");
            return;
        }
        int selectedRow = firTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row to add to case");
            return;
        }

        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(selectedRow, 0);

        int spacing;
        try {
            spacing = Integer.valueOf(fingerPrintSpacingTextField.getText());

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "DNA values should be in numbers", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        enquiryReportRequest.setFingerPrintType(fingerPrintTypeTextField.getText());
        enquiryReportRequest.setFingerSpacing(Integer.valueOf(fingerPrintSpacingTextField.getText()));
        JOptionPane.showMessageDialog(this, "Added to case");
        enquiryIDTextField.setText("");
        enquiryDescriptionTextField.setText("");
        fingerPrintTypeTextField.setText("");
        fingerPrintSpacingTextField.setText("");
    }//GEN-LAST:event_addToCaseButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = firTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "No row was selected");
            return;
        }
        EnquiryReportRequest enquiryReportRequest = (EnquiryReportRequest) firTable.getValueAt(selectedRow, 0);
        enquiryIDTextField.setText(String.valueOf(enquiryReportRequest.getEnquiryID()));
        enquiryDescriptionTextField.setText(enquiryReportRequest.getEnquiryDescription());

    }//GEN-LAST:event_viewButtonActionPerformed

    private void populateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_populateButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = fingerTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "No row was selected");
            return;
        }

        LabFingerPrintRequest labFingerPrintRequest = (LabFingerPrintRequest) fingerTable.getValueAt(selectedRow, 0);
        fingerPrintSpacingTextField.setText(String.valueOf(labFingerPrintRequest.getSpace()));
        fingerPrintTypeTextField.setText(labFingerPrintRequest.getResult());

    }//GEN-LAST:event_populateButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addToCaseButton;
    private javax.swing.JButton backButton;
    private javax.swing.JTextField enquiryDescriptionTextField;
    private javax.swing.JTextField enquiryIDTextField;
    private javax.swing.JTextField fingerPrintSpacingTextField;
    private javax.swing.JTextField fingerPrintTypeTextField;
    private javax.swing.JTable fingerTable;
    private javax.swing.JTable firTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton populateButton;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
